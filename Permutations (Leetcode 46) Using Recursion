class Solution {
    public void swap(int[] nums , int i , int index) {
        int temp = nums[i];
        nums[i] = nums[index];
        nums[index] = temp;
    }
    public void recur(int index , int[] nums , List<List<Integer>> list) {
        if(index == nums.length - 1) {
            List<Integer> ans = new ArrayList<>();
            for(int x : nums) {
                ans.add(x);
            }
            list.add(ans);
            return;
        }

        for(int i = index; i < nums.length; i++) {
            swap(nums , i , index);
            recur(index + 1 , nums , list);
            swap(nums , index , i);
        }
    }
    public List<List<Integer>> permute(int[] nums) {
       List<List<Integer>> list = new ArrayList<>();
       recur(0 , nums , list); 
       return list;
    }
}
